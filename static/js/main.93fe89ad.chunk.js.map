{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","props","addTodo","React","useState","id","task","completed","todo","setTodo","inputField","setInputField","document","querySelector","onSubmit","e","preventDefault","uuidv4","handleSubmit","name","onChange","target","value","handleTaskInputChange","type","style","width","height","borderRadius","backgroundColor","margin","color","border","outline","paddingLeft","fontSize","Todo","toggleComplete","removeTodo","display","listStyleType","justifyContent","className","onClick","textDecoration","TodoList","todos","map","key","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","flexDirection","alignItems","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNA8DeA,EA3DF,SAACC,GAAW,IACfC,EAAYD,EAAZC,QADc,EAGEC,IAAMC,SAAS,CACrC,CACEC,GAAI,GACJC,KAAM,GACNC,WAAW,KAPO,mBAGfC,EAHe,KAGTC,EAHS,OAWcN,IAAMC,SAAS,IAX7B,mBAWfM,EAXe,KAWHC,EAXG,KA2BRC,SAASC,cAAc,cAErC,OACE,0BACEC,SAAU,SAACC,IAbM,SAACA,GACpBA,EAAEC,iBACER,EAAKF,OACPJ,EAAQ,2BAAKM,GAAN,IAAYH,GAAIY,iBACvBR,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,MACzBK,EAAc,KASZO,CAAaH,KAGf,2BACEI,KAAK,OACLd,GAAG,YACHe,SAAU,SAACL,GAAD,OAzBc,SAACA,GAC7BN,EAAQ,2BAAKD,GAAN,IAAYF,KAAMS,EAAEM,OAAOC,SAClCX,EAAcI,EAAEM,OAAOC,OAuBFC,CAAsBR,IACvCO,MAAOZ,EACPc,KAAK,OACLC,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,aAAc,OACdC,gBAAiB,QACjBC,OAAQ,OACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,OACTC,YAAa,MACbC,SAAU,UAGd,4BAAQX,KAAK,UAAb,YCfSY,EAxCF,SAACnC,GAAW,IACfO,EAAqCP,EAArCO,KAAM6B,EAA+BpC,EAA/BoC,eAAgBC,EAAerC,EAAfqC,WAU9B,OACE,yBACEb,MAAO,CACLc,QAAS,OACTC,cAAe,OACfC,eAAgB,kBAGlB,2BACEC,UAAU,WACVC,QAAS,WAjBbN,EAAe7B,EAAKH,KAkBhBmB,KAAK,aAEP,wBACEkB,UAAU,WACVjB,MAAO,CACLM,MAAO,QACPa,eAAgBpC,EAAKD,UAAY,eAAiB,OAGnDC,EAAKF,MAER,4BAAQoC,UAAU,WAAWC,QAAS,WAzBxCL,EAAW9B,EAAKH,MAyBd,YCfSwC,EAjBE,SAAC5C,GAAW,IACnB6C,EAAsC7C,EAAtC6C,MAAOT,EAA+BpC,EAA/BoC,eAAgBC,EAAerC,EAAfqC,WAE/B,OACE,4BACGQ,EAAMC,KAAI,SAACvC,GAAD,OACT,kBAAC,EAAD,CACEwC,IAAKxC,EAAKH,GACVG,KAAMA,EACN6B,eAAgBA,EAChBC,WAAYA,SC2DPW,MAjEf,WAAgB,IAAD,EACa9C,IAAMC,SAAS,IAD5B,mBACN0C,EADM,KACCI,EADD,KAqCb,OAlCAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QANvB,0BAOlBJ,GACFF,EAASE,KAEV,IAEHD,qBAAU,WAERI,aAAaE,QAdS,wBAckBJ,KAAKK,UAAUZ,MACtD,CAACA,IAyBF,yBAAKJ,UAAU,OACb,yBACEjB,MAAO,CACLc,QAAS,OACToB,cAAe,SACfC,WAAY,WAGd,wBACEnC,MAAO,CACLK,OAAQ,kBAFZ,iBAOA,kBAAC,EAAD,CAAM5B,QAtCI,SAACM,GACf0C,EAAS,CAAC1C,GAAF,mBAAWsC,QAuCf,kBAAC,EAAD,CACEA,MAAOA,EACPT,eAtCe,SAAChC,GACtB6C,EACEJ,EAAMC,KAAI,SAACvC,GACT,OAAIA,EAAKH,KAAOA,EACP,2BACFG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OA8BL8B,WAzBW,SAACjC,GAClB6C,EAASJ,EAAMe,QAAO,SAACrD,GAAD,OAAUA,EAAKH,KAAOA,YCrChDyD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpD,SAASqD,eAAe,U","file":"static/js/main.93fe89ad.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Form = (props) => {\n  const { addTodo } = props;\n\n  const [todo, setTodo] = React.useState([\n    {\n      id: \"\",\n      task: \"\",\n      completed: false,\n    },\n  ]);\n\n  const [inputField, setInputField] = React.useState(\"\");\n\n  const handleTaskInputChange = (e) => {\n    setTodo({ ...todo, task: e.target.value });\n    setInputField(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todo.task) {\n      addTodo({ ...todo, id: uuidv4() });\n      setTodo({ ...todo, task: \"\" });\n      setInputField(\"\");\n    }\n  };\n\n  const input = document.querySelector(\"#textInput\");\n\n  return (\n    <form\n      onSubmit={(e) => {\n        handleSubmit(e);\n      }}\n    >\n      <input\n        name=\"task\"\n        id=\"textInput\"\n        onChange={(e) => handleTaskInputChange(e)}\n        value={inputField}\n        type=\"text\"\n        style={{\n          width: \"200px\",\n          height: \"30px\",\n          borderRadius: \"10px\",\n          backgroundColor: \"white\",\n          margin: \"20px\",\n          color: \"black\",\n          border: \"none\",\n          outline: \"none\",\n          paddingLeft: \"5px\",\n          fontSize: \"20px\",\n        }}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = (props) => {\n  const { todo, toggleComplete, removeTodo } = props;\n\n  const handleCheckBoxClick = () => {\n    toggleComplete(todo.id);\n  };\n\n  const handleRemove = () => {\n    removeTodo(todo.id);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <input\n        className=\"todoItem\"\n        onClick={() => handleCheckBoxClick()}\n        type=\"checkbox\"\n      />\n      <li\n        className=\"todoItem\"\n        style={{\n          color: \"white\",\n          textDecoration: todo.completed ? \"line-through\" : null,\n        }}\n      >\n        {todo.task}\n      </li>\n      <button className=\"todoItem\" onClick={() => handleRemove()}>\n        Remove\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = (props) => {\n  const { todos, toggleComplete, removeTodo } = props;\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          toggleComplete={toggleComplete}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Create a local storage when the state [todos] changes\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (todo) => {\n    setTodos([todo, ...todos]);\n  };\n\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1\n          style={{\n            margin: \"20px 0 10px 0\",\n          }}\n        >\n          My to-do list\n        </h1>\n        <Form addTodo={addTodo} />\n\n        <TodoList\n          todos={todos}\n          toggleComplete={toggleComplete}\n          removeTodo={removeTodo}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}